# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from unicourt_python_sdk.type.case_document_child_document_id_array import CaseDocumentChildDocumentIdArray
from unicourt_python_sdk.type.preview_document import PreviewDocument

class RequiredCaseDocument(TypedDict):
    # Description of the document.
    description: typing.Optional[str]

    # Date and time when the document was downloaded and added to the UniCourt Crowd Source Library.
    addedToLibraryDate: typing.Optional[str]

    # UniCourt's Case Document ID.
    caseDocumentId: str

    childDocumentIdArray: CaseDocumentChildDocumentIdArray

    # Document Date when it was filed. The document date will be either explicitly provided byt the court or if the document is associatated to a docket entry then the document date will be of docket entry date.
    documentFiledDate: typing.Optional[str]

    # Link to either view the document if it is downloaded and already present in the UniCourt CrowdSourced Library.
    downloadAPI: typing.Optional[str]

    # Estimated duration of a Order.
    estimatedOrderDuration: str

    # Is the date when the document was first fetched from the court site.
    firstFetchDate: str

    # Determines if the document is present in the UniCourt Library or not.
    inLibrary: bool

    # Determines if a preview is available for the case document.
    isPreviewAvailable: bool

    # Document name.
    name: typing.Optional[str]

    # Name of the object
    object: str

    # Total number of pages in the document.
    pages: typing.Optional[int]

    # Document ID which is the parent document for the current document. This will be null if the current document is a parent document.
    parentDocumentId: typing.Optional[str]

    previewDocument: PreviewDocument

    # Price of the document.
    price: typing.Optional[typing.Union[int, float]]

    # Order of documents how it is being stored in UniCourt.
    sortOrder: typing.Optional[int]

    # The status of source data of document. If the value of sourceDataStatus is SOURCE_DEPRECATED then it means that the Document has been migrated from old court site to a new court site and the data being shown in the API response is from a old court site. If the sourceDataStatus is NO_LONGER_AVAILABLE_IN_COURT then it means that a particular case is invalid in the court site.
    sourceDataStatus: typing.Optional[str]

class OptionalCaseDocument(TypedDict, total=False):
    pass

class CaseDocument(RequiredCaseDocument, OptionalCaseDocument):
    pass
