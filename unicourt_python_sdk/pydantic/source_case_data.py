# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from unicourt_python_sdk.pydantic.nature_of_suit import NatureOfSuit
from unicourt_python_sdk.pydantic.source_cause_of_action import SourceCauseOfAction
from unicourt_python_sdk.pydantic.source_charge import SourceCharge
from unicourt_python_sdk.pydantic.source_page_data import SourcePageData

class SourceCaseData(BaseModel):
    # Array of Charges for a case which is provided by the Court.
    nature_of_suit_array: typing.List[NatureOfSuit] = Field(alias='natureOfSuitArray')

    # Name of the object
    object: str = Field(alias='object')

    # Case Status as provided by Court.
    source_case_status: str = Field(alias='sourceCaseStatus')

    # Case Type for a case which is provided by the Court.
    source_case_type: str = Field(alias='sourceCaseType')

    # Array of Cause Of Action for a case which is provided by the Court.
    source_cause_of_action_array: typing.List[SourceCauseOfAction] = Field(alias='sourceCauseOfActionArray')

    # Array of Charges for a case which is provided by the Court.
    source_charge_array: typing.List[SourceCharge] = Field(alias='sourceChargeArray')

    # Courtrhouse as provided by Court.
    source_court: str = Field(alias='sourceCourt')

    source_page_data: typing.List[SourcePageData] = Field(alias='sourcePageData')
    class Config:
        arbitrary_types_allowed = True
