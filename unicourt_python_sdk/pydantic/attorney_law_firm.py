# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class AttorneyLawFirm(BaseModel):
    # ID for the law firm of an attorney in this case. This ID is unique within a case and NOT across cases. If the same attorney were to appear in another case this ID would be different.
    attorney_law_firm_id: typing.Optional[str] = Field(alias='attorneyLawFirmId')

    # Is the date when the document was first fetched from the court site.
    first_fetch_date: str = Field(alias='firstFetchDate')

    # Signifies if the attorney as this attorney type is currently isVisible or not for the case.
    is_visible: bool = Field(alias='isVisible')

    # Is the date when the document was last fetched from the court site.
    last_fetch_date: str = Field(alias='lastFetchDate')

    # Name of the law firm as provided by Court.
    name: str = Field(alias='name')

    # Name of the object
    object: str = Field(alias='object')
    class Config:
        arbitrary_types_allowed = True
