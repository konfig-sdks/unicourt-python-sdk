# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from unicourt_python_sdk.pydantic.bar_source_data import BarSourceData
from unicourt_python_sdk.pydantic.contact import Contact

class BarRecord(BaseModel):
    # The admittedDate is the date when an attorney was admitted to the bar of a given state.
    admitted_date: typing.Optional[datetime] = Field(alias='admittedDate')

    bar_number: typing.Optional[str] = Field(alias='barNumber')

    bar_source_data: BarSourceData = Field(alias='barSourceData')

    bar_source_type: str = Field(alias='barSourceType')

    contact: Contact = Field(alias='contact')

    first_fetch_date: datetime = Field(alias='firstFetchDate')

    inactivation_date: typing.Optional[datetime] = Field(alias='inactivationDate')

    last_fetch_date: datetime = Field(alias='lastFetchDate')

    # Last Fetch Date of the Attorney Update.
    last_fetch_date_with_updates: datetime = Field(alias='lastFetchDateWithUpdates')

    object: str = Field(alias='object')

    state_code: str = Field(alias='stateCode')

    status: Literal["Active", "Inactive", "Not Classified", "Unknown"] = Field(alias='status')
    class Config:
        arbitrary_types_allowed = True
