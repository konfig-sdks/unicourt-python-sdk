# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class Address(BaseModel):
    # City
    city: typing.Optional[str] = Field(alias='city')

    # ISO 3166-1 alpha-3 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements). Code of the country if country name is present.
    country_code: typing.Optional[str] = Field(alias='countryCode')

    # Country Name if present else default value.
    country_name: str = Field(alias='countryName')

    # Date at which this record is created in UniCourt.
    first_fetch_date: datetime = Field(alias='firstFetchDate')

    # Boolean indicating if the address is visible or not.
    is_visible: bool = Field(alias='isVisible')

    # Date at which this record was updated in UniCourt.
    last_fetch_date: datetime = Field(alias='lastFetchDate')

    # Coordinates at geographic coordinate system.
    latitude: typing.Optional[typing.Union[int, float]] = Field(alias='latitude')

    # Coordinates at geographic coordinate system.
    longitude: typing.Optional[typing.Union[int, float]] = Field(alias='longitude')

    object: str = Field(alias='object')

    # State Code if the state is a US state else contains null.
    state_code: typing.Optional[str] = Field(alias='stateCode')

    # State Name if present else default value.
    state_name: str = Field(alias='stateName')

    # 1st part of the street address.
    street_address1: typing.Optional[str] = Field(alias='streetAddress1')

    # 2nd part of the street address.
    street_address2: typing.Optional[str] = Field(alias='streetAddress2')

    # Zip code of the address.
    zip: typing.Optional[str] = Field(alias='zip')

    # 4 digit extension of the zip code if the address is a US address.
    zip4: typing.Optional[str] = Field(alias='zip4')
    class Config:
        arbitrary_types_allowed = True
