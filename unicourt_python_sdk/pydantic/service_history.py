# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class ServiceHistory(BaseModel):
    # Title held by the Judge.
    title: typing.Optional[str] = Field(alias='title')

    # The President-in-charge of the Judges appointment.
    appointed_by: typing.Optional[str] = Field(alias='appointedBy')

    # The year in which the Judge began practicing in his current service.
    from_date: typing.Optional[datetime] = Field(alias='fromDate')

    # The year in which the Judge began practicing in his current service.
    from_year: typing.Optional[int] = Field(alias='fromYear')

    # Boolean indicating if the service history  is visible or not.
    is_visible: bool = Field(alias='isVisible')

    object: str = Field(alias='object')

    # The reason for the Judges termination for the current position.
    reason_for_termination: typing.Optional[str] = Field(alias='reasonForTermination')

    # The court served by the Judge. The court is taken from source.
    source_court: typing.Optional[str] = Field(alias='sourceCourt')

    # The year in which the Judge stoped practicing in his current service.
    to_date: typing.Optional[datetime] = Field(alias='toDate')

    # The year in which the Judge stoped practicing in his current service.
    to_year: typing.Optional[int] = Field(alias='toYear')
    class Config:
        arbitrary_types_allowed = True
