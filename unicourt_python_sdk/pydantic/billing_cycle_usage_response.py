# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from unicourt_python_sdk.pydantic.billing_cycle_usage_response_api_calls_billable import BillingCycleUsageResponseApiCallsBillable
from unicourt_python_sdk.pydantic.billing_cycle_usage_response_api_calls_credited import BillingCycleUsageResponseApiCallsCredited
from unicourt_python_sdk.pydantic.billing_cycle_usage_response_api_calls_made import BillingCycleUsageResponseApiCallsMade
from unicourt_python_sdk.pydantic.billing_cycle_usage_response_billing_cycle import BillingCycleUsageResponseBillingCycle

class BillingCycleUsageResponse(BaseModel):
    api_calls_billable: BillingCycleUsageResponseApiCallsBillable = Field(alias='apiCallsBillable')

    api_calls_credited: BillingCycleUsageResponseApiCallsCredited = Field(alias='apiCallsCredited')

    api_calls_made: BillingCycleUsageResponseApiCallsMade = Field(alias='apiCallsMade')

    # Billing cycle apiUsage.
    api_usage: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(alias='apiUsage')

    billing_cycle: BillingCycleUsageResponseBillingCycle = Field(alias='billingCycle')

    # Billing cycle days.
    days: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(alias='days')

    # Name of the object.
    object: str = Field(alias='object')

    # Total number of successful case tracks.
    total_cases_tracked: int = Field(alias='totalCasesTracked')
    class Config:
        arbitrary_types_allowed = True
