# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from unicourt_python_sdk import schemas  # noqa: F401


class BarSourceDataCourtOfAdmissions(
    schemas.DictBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneFrozenDictMixin
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "federalArray",
            "otherCourtsArray",
            "courtStateArray",
        }
        
        class properties:
        
            @staticmethod
            def courtStateArray() -> typing.Type['BarSourceDataCourtOfAdmissionsCourtStateArray']:
                return BarSourceDataCourtOfAdmissionsCourtStateArray
        
            @staticmethod
            def federalArray() -> typing.Type['BarSourceDataCourtOfAdmissionsFederalArray']:
                return BarSourceDataCourtOfAdmissionsFederalArray
        
            @staticmethod
            def otherCourtsArray() -> typing.Type['BarSourceDataCourtOfAdmissionsOtherCourtsArray']:
                return BarSourceDataCourtOfAdmissionsOtherCourtsArray
            __annotations__ = {
                "courtStateArray": courtStateArray,
                "federalArray": federalArray,
                "otherCourtsArray": otherCourtsArray,
            }

    
    federalArray: 'BarSourceDataCourtOfAdmissionsFederalArray'
    otherCourtsArray: 'BarSourceDataCourtOfAdmissionsOtherCourtsArray'
    courtStateArray: 'BarSourceDataCourtOfAdmissionsCourtStateArray'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["courtStateArray"]) -> 'BarSourceDataCourtOfAdmissionsCourtStateArray': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["federalArray"]) -> 'BarSourceDataCourtOfAdmissionsFederalArray': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["otherCourtsArray"]) -> 'BarSourceDataCourtOfAdmissionsOtherCourtsArray': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["courtStateArray", "federalArray", "otherCourtsArray", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["courtStateArray"]) -> 'BarSourceDataCourtOfAdmissionsCourtStateArray': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["federalArray"]) -> 'BarSourceDataCourtOfAdmissionsFederalArray': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["otherCourtsArray"]) -> 'BarSourceDataCourtOfAdmissionsOtherCourtsArray': ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["courtStateArray", "federalArray", "otherCourtsArray", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, None, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BarSourceDataCourtOfAdmissions':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )

from unicourt_python_sdk.model.bar_source_data_court_of_admissions_court_state_array import BarSourceDataCourtOfAdmissionsCourtStateArray
from unicourt_python_sdk.model.bar_source_data_court_of_admissions_federal_array import BarSourceDataCourtOfAdmissionsFederalArray
from unicourt_python_sdk.model.bar_source_data_court_of_admissions_other_courts_array import BarSourceDataCourtOfAdmissionsOtherCourtsArray
