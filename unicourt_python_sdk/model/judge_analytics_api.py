# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from unicourt_python_sdk import schemas  # noqa: F401


class JudgeAnalyticsAPI(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "associatedNormPartiesAPI",
            "associatedNormAttorneysAPI",
            "associatedNormLawFirmsAPI",
            "normJudgeAPI",
            "object",
        }
        
        class properties:
            
            
            class associatedNormAttorneysAPI(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'uri'
                    max_length = 255
            
            
            class associatedNormLawFirmsAPI(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'uri'
                    max_length = 255
            
            
            class associatedNormPartiesAPI(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'uri'
                    max_length = 255
            
            
            class normJudgeAPI(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'uri'
                    max_length = 255
            
            
            class object(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 17
            __annotations__ = {
                "associatedNormAttorneysAPI": associatedNormAttorneysAPI,
                "associatedNormLawFirmsAPI": associatedNormLawFirmsAPI,
                "associatedNormPartiesAPI": associatedNormPartiesAPI,
                "normJudgeAPI": normJudgeAPI,
                "object": object,
            }
    
    associatedNormPartiesAPI: MetaOapg.properties.associatedNormPartiesAPI
    associatedNormAttorneysAPI: MetaOapg.properties.associatedNormAttorneysAPI
    associatedNormLawFirmsAPI: MetaOapg.properties.associatedNormLawFirmsAPI
    normJudgeAPI: MetaOapg.properties.normJudgeAPI
    object: MetaOapg.properties.object
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["associatedNormAttorneysAPI"]) -> MetaOapg.properties.associatedNormAttorneysAPI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["associatedNormLawFirmsAPI"]) -> MetaOapg.properties.associatedNormLawFirmsAPI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["associatedNormPartiesAPI"]) -> MetaOapg.properties.associatedNormPartiesAPI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["normJudgeAPI"]) -> MetaOapg.properties.normJudgeAPI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["associatedNormAttorneysAPI", "associatedNormLawFirmsAPI", "associatedNormPartiesAPI", "normJudgeAPI", "object", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["associatedNormAttorneysAPI"]) -> MetaOapg.properties.associatedNormAttorneysAPI: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["associatedNormLawFirmsAPI"]) -> MetaOapg.properties.associatedNormLawFirmsAPI: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["associatedNormPartiesAPI"]) -> MetaOapg.properties.associatedNormPartiesAPI: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["normJudgeAPI"]) -> MetaOapg.properties.normJudgeAPI: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["associatedNormAttorneysAPI", "associatedNormLawFirmsAPI", "associatedNormPartiesAPI", "normJudgeAPI", "object", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        associatedNormPartiesAPI: typing.Union[MetaOapg.properties.associatedNormPartiesAPI, str, ],
        associatedNormAttorneysAPI: typing.Union[MetaOapg.properties.associatedNormAttorneysAPI, str, ],
        associatedNormLawFirmsAPI: typing.Union[MetaOapg.properties.associatedNormLawFirmsAPI, str, ],
        normJudgeAPI: typing.Union[MetaOapg.properties.normJudgeAPI, str, ],
        object: typing.Union[MetaOapg.properties.object, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'JudgeAnalyticsAPI':
        return super().__new__(
            cls,
            *args,
            associatedNormPartiesAPI=associatedNormPartiesAPI,
            associatedNormAttorneysAPI=associatedNormAttorneysAPI,
            associatedNormLawFirmsAPI=associatedNormLawFirmsAPI,
            normJudgeAPI=normJudgeAPI,
            object=object,
            _configuration=_configuration,
            **kwargs,
        )
