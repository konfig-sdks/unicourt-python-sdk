# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from unicourt_python_sdk import schemas  # noqa: F401


class SOSDataPreview(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "sosNumber",
            "stateCode",
            "object",
        }
        
        class properties:
            
            
            class object(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 14
            
            
            class sosNumber(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 250
            
            
            class stateCode(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 2
            __annotations__ = {
                "object": object,
                "sosNumber": sosNumber,
                "stateCode": stateCode,
            }
    
    sosNumber: MetaOapg.properties.sosNumber
    stateCode: MetaOapg.properties.stateCode
    object: MetaOapg.properties.object
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["sosNumber"]) -> MetaOapg.properties.sosNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stateCode"]) -> MetaOapg.properties.stateCode: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["object", "sosNumber", "stateCode", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["sosNumber"]) -> MetaOapg.properties.sosNumber: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stateCode"]) -> MetaOapg.properties.stateCode: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["object", "sosNumber", "stateCode", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        sosNumber: typing.Union[MetaOapg.properties.sosNumber, str, ],
        stateCode: typing.Union[MetaOapg.properties.stateCode, str, ],
        object: typing.Union[MetaOapg.properties.object, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SOSDataPreview':
        return super().__new__(
            cls,
            *args,
            sosNumber=sosNumber,
            stateCode=stateCode,
            object=object,
            _configuration=_configuration,
            **kwargs,
        )
