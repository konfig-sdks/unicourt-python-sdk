# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from unicourt_python_sdk import schemas  # noqa: F401


class SimilarNormAttorney(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "normAttorneySimilarityScore",
            "normAttorneyId",
            "name",
            "barRecordPreviewArray",
            "normAttorneyAPI",
            "object",
        }
        
        class properties:
            
            
            class barRecordPreviewArray(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['BarRecordPreview']:
                        return BarRecordPreview
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['BarRecordPreview'], typing.List['BarRecordPreview']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'barRecordPreviewArray':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'BarRecordPreview':
                    return super().__getitem__(i)
            
            
            class name(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 500
                    min_length = 1
            
            
            class normAttorneyAPI(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'uri'
                    max_length = 255
            
            
            class normAttorneyId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 18
                    min_length = 18
            normAttorneySimilarityScore = schemas.Float32Schema
            
            
            class object(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 19
                    min_length = 19
            __annotations__ = {
                "barRecordPreviewArray": barRecordPreviewArray,
                "name": name,
                "normAttorneyAPI": normAttorneyAPI,
                "normAttorneyId": normAttorneyId,
                "normAttorneySimilarityScore": normAttorneySimilarityScore,
                "object": object,
            }
    
    normAttorneySimilarityScore: MetaOapg.properties.normAttorneySimilarityScore
    normAttorneyId: MetaOapg.properties.normAttorneyId
    name: MetaOapg.properties.name
    barRecordPreviewArray: MetaOapg.properties.barRecordPreviewArray
    normAttorneyAPI: MetaOapg.properties.normAttorneyAPI
    object: MetaOapg.properties.object
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["barRecordPreviewArray"]) -> MetaOapg.properties.barRecordPreviewArray: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["normAttorneyAPI"]) -> MetaOapg.properties.normAttorneyAPI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["normAttorneyId"]) -> MetaOapg.properties.normAttorneyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["normAttorneySimilarityScore"]) -> MetaOapg.properties.normAttorneySimilarityScore: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["barRecordPreviewArray", "name", "normAttorneyAPI", "normAttorneyId", "normAttorneySimilarityScore", "object", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["barRecordPreviewArray"]) -> MetaOapg.properties.barRecordPreviewArray: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["normAttorneyAPI"]) -> MetaOapg.properties.normAttorneyAPI: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["normAttorneyId"]) -> MetaOapg.properties.normAttorneyId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["normAttorneySimilarityScore"]) -> MetaOapg.properties.normAttorneySimilarityScore: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["barRecordPreviewArray", "name", "normAttorneyAPI", "normAttorneyId", "normAttorneySimilarityScore", "object", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        normAttorneySimilarityScore: typing.Union[MetaOapg.properties.normAttorneySimilarityScore, decimal.Decimal, int, float, ],
        normAttorneyId: typing.Union[MetaOapg.properties.normAttorneyId, str, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        barRecordPreviewArray: typing.Union[MetaOapg.properties.barRecordPreviewArray, list, tuple, ],
        normAttorneyAPI: typing.Union[MetaOapg.properties.normAttorneyAPI, str, ],
        object: typing.Union[MetaOapg.properties.object, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SimilarNormAttorney':
        return super().__new__(
            cls,
            *args,
            normAttorneySimilarityScore=normAttorneySimilarityScore,
            normAttorneyId=normAttorneyId,
            name=name,
            barRecordPreviewArray=barRecordPreviewArray,
            normAttorneyAPI=normAttorneyAPI,
            object=object,
            _configuration=_configuration,
            **kwargs,
        )

from unicourt_python_sdk.model.bar_record_preview import BarRecordPreview
