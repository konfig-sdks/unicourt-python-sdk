# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from unicourt_python_sdk import schemas  # noqa: F401


class DailyUsageResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "usageStartTime",
            "apiCallsCredited",
            "apiUsage",
            "usageEndTime",
            "apiCallsBillable",
            "apiCallsMade",
            "object",
        }
        
        class properties:
        
            @staticmethod
            def apiCallsBillable() -> typing.Type['DailyUsageResponseApiCallsBillable']:
                return DailyUsageResponseApiCallsBillable
        
            @staticmethod
            def apiCallsCredited() -> typing.Type['DailyUsageResponseApiCallsCredited']:
                return DailyUsageResponseApiCallsCredited
        
            @staticmethod
            def apiCallsMade() -> typing.Type['DailyUsageResponseApiCallsMade']:
                return DailyUsageResponseApiCallsMade
            apiUsage = schemas.DictSchema
            
            
            class object(
                schemas.StrSchema
            ):
                pass
            
            
            class usageEndTime(
                schemas.DateTimeSchema
            ):
                pass
            
            
            class usageStartTime(
                schemas.DateTimeSchema
            ):
                pass
            __annotations__ = {
                "apiCallsBillable": apiCallsBillable,
                "apiCallsCredited": apiCallsCredited,
                "apiCallsMade": apiCallsMade,
                "apiUsage": apiUsage,
                "object": object,
                "usageEndTime": usageEndTime,
                "usageStartTime": usageStartTime,
            }
    
    usageStartTime: MetaOapg.properties.usageStartTime
    apiCallsCredited: 'DailyUsageResponseApiCallsCredited'
    apiUsage: MetaOapg.properties.apiUsage
    usageEndTime: MetaOapg.properties.usageEndTime
    apiCallsBillable: 'DailyUsageResponseApiCallsBillable'
    apiCallsMade: 'DailyUsageResponseApiCallsMade'
    object: MetaOapg.properties.object
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apiCallsBillable"]) -> 'DailyUsageResponseApiCallsBillable': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apiCallsCredited"]) -> 'DailyUsageResponseApiCallsCredited': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apiCallsMade"]) -> 'DailyUsageResponseApiCallsMade': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["apiUsage"]) -> MetaOapg.properties.apiUsage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usageEndTime"]) -> MetaOapg.properties.usageEndTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usageStartTime"]) -> MetaOapg.properties.usageStartTime: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["apiCallsBillable", "apiCallsCredited", "apiCallsMade", "apiUsage", "object", "usageEndTime", "usageStartTime", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apiCallsBillable"]) -> 'DailyUsageResponseApiCallsBillable': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apiCallsCredited"]) -> 'DailyUsageResponseApiCallsCredited': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apiCallsMade"]) -> 'DailyUsageResponseApiCallsMade': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["apiUsage"]) -> MetaOapg.properties.apiUsage: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usageEndTime"]) -> MetaOapg.properties.usageEndTime: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usageStartTime"]) -> MetaOapg.properties.usageStartTime: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["apiCallsBillable", "apiCallsCredited", "apiCallsMade", "apiUsage", "object", "usageEndTime", "usageStartTime", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        usageStartTime: typing.Union[MetaOapg.properties.usageStartTime, str, datetime, ],
        apiCallsCredited: 'DailyUsageResponseApiCallsCredited',
        apiUsage: typing.Union[MetaOapg.properties.apiUsage, dict, frozendict.frozendict, ],
        usageEndTime: typing.Union[MetaOapg.properties.usageEndTime, str, datetime, ],
        apiCallsBillable: 'DailyUsageResponseApiCallsBillable',
        apiCallsMade: 'DailyUsageResponseApiCallsMade',
        object: typing.Union[MetaOapg.properties.object, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DailyUsageResponse':
        return super().__new__(
            cls,
            *args,
            usageStartTime=usageStartTime,
            apiCallsCredited=apiCallsCredited,
            apiUsage=apiUsage,
            usageEndTime=usageEndTime,
            apiCallsBillable=apiCallsBillable,
            apiCallsMade=apiCallsMade,
            object=object,
            _configuration=_configuration,
            **kwargs,
        )

from unicourt_python_sdk.model.daily_usage_response_api_calls_billable import DailyUsageResponseApiCallsBillable
from unicourt_python_sdk.model.daily_usage_response_api_calls_credited import DailyUsageResponseApiCallsCredited
from unicourt_python_sdk.model.daily_usage_response_api_calls_made import DailyUsageResponseApiCallsMade
