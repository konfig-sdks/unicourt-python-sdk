# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from unicourt_python_sdk import schemas  # noqa: F401


class AssociatedNormJudge(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Associated Judge
    """


    class MetaOapg:
        required = {
            "firstName",
            "lastName",
            "caseSearchAPI",
            "name",
            "caseTimeline",
            "middleName",
            "normJudgeAPI",
            "normJudgeId",
            "caseCount",
            "version",
            "object",
        }
        
        class properties:
            
            
            class version(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 7
            caseCount = schemas.IntSchema
            
            
            class caseSearchAPI(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'uri'
                    max_length = 255
        
            @staticmethod
            def caseTimeline() -> typing.Type['CaseTimeline']:
                return CaseTimeline
            
            
            class firstName(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 500
            
            
            class lastName(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 500
            
            
            class middleName(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 500
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'middleName':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class name(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 500
            
            
            class normJudgeAPI(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'uri'
                    max_length = 255
            
            
            class normJudgeId(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 18
                    min_length = 18
            
            
            class object(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 19
            __annotations__ = {
                "version": version,
                "caseCount": caseCount,
                "caseSearchAPI": caseSearchAPI,
                "caseTimeline": caseTimeline,
                "firstName": firstName,
                "lastName": lastName,
                "middleName": middleName,
                "name": name,
                "normJudgeAPI": normJudgeAPI,
                "normJudgeId": normJudgeId,
                "object": object,
            }
    
    firstName: MetaOapg.properties.firstName
    lastName: MetaOapg.properties.lastName
    caseSearchAPI: MetaOapg.properties.caseSearchAPI
    name: MetaOapg.properties.name
    caseTimeline: 'CaseTimeline'
    middleName: MetaOapg.properties.middleName
    normJudgeAPI: MetaOapg.properties.normJudgeAPI
    normJudgeId: MetaOapg.properties.normJudgeId
    caseCount: MetaOapg.properties.caseCount
    version: MetaOapg.properties.version
    object: MetaOapg.properties.object
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["version"]) -> MetaOapg.properties.version: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["caseCount"]) -> MetaOapg.properties.caseCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["caseSearchAPI"]) -> MetaOapg.properties.caseSearchAPI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["caseTimeline"]) -> 'CaseTimeline': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middleName"]) -> MetaOapg.properties.middleName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["normJudgeAPI"]) -> MetaOapg.properties.normJudgeAPI: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["normJudgeId"]) -> MetaOapg.properties.normJudgeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["version", "caseCount", "caseSearchAPI", "caseTimeline", "firstName", "lastName", "middleName", "name", "normJudgeAPI", "normJudgeId", "object", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["version"]) -> MetaOapg.properties.version: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["caseCount"]) -> MetaOapg.properties.caseCount: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["caseSearchAPI"]) -> MetaOapg.properties.caseSearchAPI: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["caseTimeline"]) -> 'CaseTimeline': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middleName"]) -> MetaOapg.properties.middleName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["normJudgeAPI"]) -> MetaOapg.properties.normJudgeAPI: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["normJudgeId"]) -> MetaOapg.properties.normJudgeId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["version", "caseCount", "caseSearchAPI", "caseTimeline", "firstName", "lastName", "middleName", "name", "normJudgeAPI", "normJudgeId", "object", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        firstName: typing.Union[MetaOapg.properties.firstName, str, ],
        lastName: typing.Union[MetaOapg.properties.lastName, str, ],
        caseSearchAPI: typing.Union[MetaOapg.properties.caseSearchAPI, str, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        caseTimeline: 'CaseTimeline',
        middleName: typing.Union[MetaOapg.properties.middleName, None, str, ],
        normJudgeAPI: typing.Union[MetaOapg.properties.normJudgeAPI, str, ],
        normJudgeId: typing.Union[MetaOapg.properties.normJudgeId, str, ],
        caseCount: typing.Union[MetaOapg.properties.caseCount, decimal.Decimal, int, ],
        version: typing.Union[MetaOapg.properties.version, str, ],
        object: typing.Union[MetaOapg.properties.object, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AssociatedNormJudge':
        return super().__new__(
            cls,
            *args,
            firstName=firstName,
            lastName=lastName,
            caseSearchAPI=caseSearchAPI,
            name=name,
            caseTimeline=caseTimeline,
            middleName=middleName,
            normJudgeAPI=normJudgeAPI,
            normJudgeId=normJudgeId,
            caseCount=caseCount,
            version=version,
            object=object,
            _configuration=_configuration,
            **kwargs,
        )

from unicourt_python_sdk.model.case_timeline import CaseTimeline
