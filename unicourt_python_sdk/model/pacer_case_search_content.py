# coding: utf-8

"""
    UniCourt Enterprise APIs

    <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from unicourt_python_sdk import schemas  # noqa: F401


class PACERCaseSearchContent(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "pclDateReopened",
            "pclJointDischargedDate",
            "pclCourtId",
            "pclCaseOffice",
            "pclCivilStatTerminated",
            "pclDisposition",
            "pclNatureOfSuit",
            "pclCivilTransferee",
            "pclCivilCtoNumber",
            "pclCivilDateTerminated",
            "pclCivilStatDisposition",
            "pclMdlDateReceived",
            "pclJointBankruptcyFlag",
            "pclCaseTitle",
            "pclDispositionMethod",
            "pclJointDispositionMethod",
            "pclJointDismissedDate",
            "pclDateFiled",
            "pclCaseId",
            "pclDateDismissed",
            "pclMdlTransferee",
            "pclMdlLittype",
            "pclBankruptcyChapter",
            "pclCaseLink",
            "pclJpmlNumber",
            "pclMdlStatus",
            "pclCaseNumberFull",
            "pclMdlCourtId",
            "pclMdlJudgeLastName",
            "pclCaseNumber",
            "pclCaseType",
            "pclCivilStatInitiated",
            "pclMdlDateOrdered",
            "pclDateDischarged",
            "pclCaseYear",
            "pclCivilDateDisposition",
            "pclJurisdictionType",
            "pclMdlTransfereeDistrict",
            "pclCivilDateInitiated",
            "pclDateTermed",
            "pclMdlExtension",
            "object",
        }
        
        class properties:
            
            
            class object(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 22
                    min_length = 22
            
            
            class pclBankruptcyChapter(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclBankruptcyChapter':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            pclCaseId = schemas.IntSchema
            
            
            class pclCaseLink(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 255
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCaseLink':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            pclCaseNumber = schemas.IntSchema
            
            
            class pclCaseNumberFull(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCaseNumberFull':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCaseOffice(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 2
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCaseOffice':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCaseTitle(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 255
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCaseTitle':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCaseType(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 6
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCaseType':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            pclCaseYear = schemas.IntSchema
            
            
            class pclCivilCtoNumber(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilCtoNumber':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCivilDateDisposition(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilDateDisposition':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCivilDateInitiated(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilDateInitiated':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCivilDateTerminated(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilDateTerminated':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCivilStatDisposition(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilStatDisposition':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCivilStatInitiated(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilStatInitiated':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCivilStatTerminated(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilStatTerminated':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCivilTransferee(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCivilTransferee':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclCourtId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 6
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclCourtId':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclDateDischarged(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclDateDischarged':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclDateDismissed(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclDateDismissed':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclDateFiled(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclDateFiled':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclDateReopened(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclDateReopened':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclDateTermed(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclDateTermed':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclDisposition(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 100
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclDisposition':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclDispositionMethod(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 100
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclDispositionMethod':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclJointBankruptcyFlag(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclJointBankruptcyFlag':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclJointDischargedDate(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclJointDischargedDate':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclJointDismissedDate(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclJointDismissedDate':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclJointDispositionMethod(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 100
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclJointDispositionMethod':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclJpmlNumber(
                schemas.IntBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneDecimalMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, decimal.Decimal, int, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclJpmlNumber':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclJurisdictionType(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "Appellate": "APPELLATE",
                        "Bankruptcy": "BANKRUPTCY",
                        "Criminal": "CRIMINAL",
                        "Civil": "CIVIL",
                        "Multi-district Litigation": "MULTIDISTRICT_LITIGATION",
                    }
                
                @schemas.classproperty
                def APPELLATE(cls):
                    return cls("Appellate")
                
                @schemas.classproperty
                def BANKRUPTCY(cls):
                    return cls("Bankruptcy")
                
                @schemas.classproperty
                def CRIMINAL(cls):
                    return cls("Criminal")
                
                @schemas.classproperty
                def CIVIL(cls):
                    return cls("Civil")
                
                @schemas.classproperty
                def MULTIDISTRICT_LITIGATION(cls):
                    return cls("Multi-district Litigation")
            
            
            class pclMdlCourtId(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlCourtId':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlDateOrdered(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlDateOrdered':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlDateReceived(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 10
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlDateReceived':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlExtension(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlExtension':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlJudgeLastName(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlJudgeLastName':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlLittype(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlLittype':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlStatus(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlStatus':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlTransferee(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlTransferee':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclMdlTransfereeDistrict(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclMdlTransfereeDistrict':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class pclNatureOfSuit(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                class MetaOapg:
                    max_length = 50
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pclNatureOfSuit':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            __annotations__ = {
                "object": object,
                "pclBankruptcyChapter": pclBankruptcyChapter,
                "pclCaseId": pclCaseId,
                "pclCaseLink": pclCaseLink,
                "pclCaseNumber": pclCaseNumber,
                "pclCaseNumberFull": pclCaseNumberFull,
                "pclCaseOffice": pclCaseOffice,
                "pclCaseTitle": pclCaseTitle,
                "pclCaseType": pclCaseType,
                "pclCaseYear": pclCaseYear,
                "pclCivilCtoNumber": pclCivilCtoNumber,
                "pclCivilDateDisposition": pclCivilDateDisposition,
                "pclCivilDateInitiated": pclCivilDateInitiated,
                "pclCivilDateTerminated": pclCivilDateTerminated,
                "pclCivilStatDisposition": pclCivilStatDisposition,
                "pclCivilStatInitiated": pclCivilStatInitiated,
                "pclCivilStatTerminated": pclCivilStatTerminated,
                "pclCivilTransferee": pclCivilTransferee,
                "pclCourtId": pclCourtId,
                "pclDateDischarged": pclDateDischarged,
                "pclDateDismissed": pclDateDismissed,
                "pclDateFiled": pclDateFiled,
                "pclDateReopened": pclDateReopened,
                "pclDateTermed": pclDateTermed,
                "pclDisposition": pclDisposition,
                "pclDispositionMethod": pclDispositionMethod,
                "pclJointBankruptcyFlag": pclJointBankruptcyFlag,
                "pclJointDischargedDate": pclJointDischargedDate,
                "pclJointDismissedDate": pclJointDismissedDate,
                "pclJointDispositionMethod": pclJointDispositionMethod,
                "pclJpmlNumber": pclJpmlNumber,
                "pclJurisdictionType": pclJurisdictionType,
                "pclMdlCourtId": pclMdlCourtId,
                "pclMdlDateOrdered": pclMdlDateOrdered,
                "pclMdlDateReceived": pclMdlDateReceived,
                "pclMdlExtension": pclMdlExtension,
                "pclMdlJudgeLastName": pclMdlJudgeLastName,
                "pclMdlLittype": pclMdlLittype,
                "pclMdlStatus": pclMdlStatus,
                "pclMdlTransferee": pclMdlTransferee,
                "pclMdlTransfereeDistrict": pclMdlTransfereeDistrict,
                "pclNatureOfSuit": pclNatureOfSuit,
            }
    
    pclDateReopened: MetaOapg.properties.pclDateReopened
    pclJointDischargedDate: MetaOapg.properties.pclJointDischargedDate
    pclCourtId: MetaOapg.properties.pclCourtId
    pclCaseOffice: MetaOapg.properties.pclCaseOffice
    pclCivilStatTerminated: MetaOapg.properties.pclCivilStatTerminated
    pclDisposition: MetaOapg.properties.pclDisposition
    pclNatureOfSuit: MetaOapg.properties.pclNatureOfSuit
    pclCivilTransferee: MetaOapg.properties.pclCivilTransferee
    pclCivilCtoNumber: MetaOapg.properties.pclCivilCtoNumber
    pclCivilDateTerminated: MetaOapg.properties.pclCivilDateTerminated
    pclCivilStatDisposition: MetaOapg.properties.pclCivilStatDisposition
    pclMdlDateReceived: MetaOapg.properties.pclMdlDateReceived
    pclJointBankruptcyFlag: MetaOapg.properties.pclJointBankruptcyFlag
    pclCaseTitle: MetaOapg.properties.pclCaseTitle
    pclDispositionMethod: MetaOapg.properties.pclDispositionMethod
    pclJointDispositionMethod: MetaOapg.properties.pclJointDispositionMethod
    pclJointDismissedDate: MetaOapg.properties.pclJointDismissedDate
    pclDateFiled: MetaOapg.properties.pclDateFiled
    pclCaseId: MetaOapg.properties.pclCaseId
    pclDateDismissed: MetaOapg.properties.pclDateDismissed
    pclMdlTransferee: MetaOapg.properties.pclMdlTransferee
    pclMdlLittype: MetaOapg.properties.pclMdlLittype
    pclBankruptcyChapter: MetaOapg.properties.pclBankruptcyChapter
    pclCaseLink: MetaOapg.properties.pclCaseLink
    pclJpmlNumber: MetaOapg.properties.pclJpmlNumber
    pclMdlStatus: MetaOapg.properties.pclMdlStatus
    pclCaseNumberFull: MetaOapg.properties.pclCaseNumberFull
    pclMdlCourtId: MetaOapg.properties.pclMdlCourtId
    pclMdlJudgeLastName: MetaOapg.properties.pclMdlJudgeLastName
    pclCaseNumber: MetaOapg.properties.pclCaseNumber
    pclCaseType: MetaOapg.properties.pclCaseType
    pclCivilStatInitiated: MetaOapg.properties.pclCivilStatInitiated
    pclMdlDateOrdered: MetaOapg.properties.pclMdlDateOrdered
    pclDateDischarged: MetaOapg.properties.pclDateDischarged
    pclCaseYear: MetaOapg.properties.pclCaseYear
    pclCivilDateDisposition: MetaOapg.properties.pclCivilDateDisposition
    pclJurisdictionType: MetaOapg.properties.pclJurisdictionType
    pclMdlTransfereeDistrict: MetaOapg.properties.pclMdlTransfereeDistrict
    pclCivilDateInitiated: MetaOapg.properties.pclCivilDateInitiated
    pclDateTermed: MetaOapg.properties.pclDateTermed
    pclMdlExtension: MetaOapg.properties.pclMdlExtension
    object: MetaOapg.properties.object
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclBankruptcyChapter"]) -> MetaOapg.properties.pclBankruptcyChapter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseId"]) -> MetaOapg.properties.pclCaseId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseLink"]) -> MetaOapg.properties.pclCaseLink: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseNumber"]) -> MetaOapg.properties.pclCaseNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseNumberFull"]) -> MetaOapg.properties.pclCaseNumberFull: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseOffice"]) -> MetaOapg.properties.pclCaseOffice: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseTitle"]) -> MetaOapg.properties.pclCaseTitle: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseType"]) -> MetaOapg.properties.pclCaseType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCaseYear"]) -> MetaOapg.properties.pclCaseYear: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilCtoNumber"]) -> MetaOapg.properties.pclCivilCtoNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilDateDisposition"]) -> MetaOapg.properties.pclCivilDateDisposition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilDateInitiated"]) -> MetaOapg.properties.pclCivilDateInitiated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilDateTerminated"]) -> MetaOapg.properties.pclCivilDateTerminated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilStatDisposition"]) -> MetaOapg.properties.pclCivilStatDisposition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilStatInitiated"]) -> MetaOapg.properties.pclCivilStatInitiated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilStatTerminated"]) -> MetaOapg.properties.pclCivilStatTerminated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCivilTransferee"]) -> MetaOapg.properties.pclCivilTransferee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclCourtId"]) -> MetaOapg.properties.pclCourtId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclDateDischarged"]) -> MetaOapg.properties.pclDateDischarged: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclDateDismissed"]) -> MetaOapg.properties.pclDateDismissed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclDateFiled"]) -> MetaOapg.properties.pclDateFiled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclDateReopened"]) -> MetaOapg.properties.pclDateReopened: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclDateTermed"]) -> MetaOapg.properties.pclDateTermed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclDisposition"]) -> MetaOapg.properties.pclDisposition: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclDispositionMethod"]) -> MetaOapg.properties.pclDispositionMethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclJointBankruptcyFlag"]) -> MetaOapg.properties.pclJointBankruptcyFlag: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclJointDischargedDate"]) -> MetaOapg.properties.pclJointDischargedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclJointDismissedDate"]) -> MetaOapg.properties.pclJointDismissedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclJointDispositionMethod"]) -> MetaOapg.properties.pclJointDispositionMethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclJpmlNumber"]) -> MetaOapg.properties.pclJpmlNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclJurisdictionType"]) -> MetaOapg.properties.pclJurisdictionType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlCourtId"]) -> MetaOapg.properties.pclMdlCourtId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlDateOrdered"]) -> MetaOapg.properties.pclMdlDateOrdered: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlDateReceived"]) -> MetaOapg.properties.pclMdlDateReceived: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlExtension"]) -> MetaOapg.properties.pclMdlExtension: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlJudgeLastName"]) -> MetaOapg.properties.pclMdlJudgeLastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlLittype"]) -> MetaOapg.properties.pclMdlLittype: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlStatus"]) -> MetaOapg.properties.pclMdlStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlTransferee"]) -> MetaOapg.properties.pclMdlTransferee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclMdlTransfereeDistrict"]) -> MetaOapg.properties.pclMdlTransfereeDistrict: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pclNatureOfSuit"]) -> MetaOapg.properties.pclNatureOfSuit: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["object", "pclBankruptcyChapter", "pclCaseId", "pclCaseLink", "pclCaseNumber", "pclCaseNumberFull", "pclCaseOffice", "pclCaseTitle", "pclCaseType", "pclCaseYear", "pclCivilCtoNumber", "pclCivilDateDisposition", "pclCivilDateInitiated", "pclCivilDateTerminated", "pclCivilStatDisposition", "pclCivilStatInitiated", "pclCivilStatTerminated", "pclCivilTransferee", "pclCourtId", "pclDateDischarged", "pclDateDismissed", "pclDateFiled", "pclDateReopened", "pclDateTermed", "pclDisposition", "pclDispositionMethod", "pclJointBankruptcyFlag", "pclJointDischargedDate", "pclJointDismissedDate", "pclJointDispositionMethod", "pclJpmlNumber", "pclJurisdictionType", "pclMdlCourtId", "pclMdlDateOrdered", "pclMdlDateReceived", "pclMdlExtension", "pclMdlJudgeLastName", "pclMdlLittype", "pclMdlStatus", "pclMdlTransferee", "pclMdlTransfereeDistrict", "pclNatureOfSuit", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["object"]) -> MetaOapg.properties.object: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclBankruptcyChapter"]) -> MetaOapg.properties.pclBankruptcyChapter: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseId"]) -> MetaOapg.properties.pclCaseId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseLink"]) -> MetaOapg.properties.pclCaseLink: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseNumber"]) -> MetaOapg.properties.pclCaseNumber: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseNumberFull"]) -> MetaOapg.properties.pclCaseNumberFull: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseOffice"]) -> MetaOapg.properties.pclCaseOffice: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseTitle"]) -> MetaOapg.properties.pclCaseTitle: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseType"]) -> MetaOapg.properties.pclCaseType: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCaseYear"]) -> MetaOapg.properties.pclCaseYear: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilCtoNumber"]) -> MetaOapg.properties.pclCivilCtoNumber: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilDateDisposition"]) -> MetaOapg.properties.pclCivilDateDisposition: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilDateInitiated"]) -> MetaOapg.properties.pclCivilDateInitiated: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilDateTerminated"]) -> MetaOapg.properties.pclCivilDateTerminated: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilStatDisposition"]) -> MetaOapg.properties.pclCivilStatDisposition: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilStatInitiated"]) -> MetaOapg.properties.pclCivilStatInitiated: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilStatTerminated"]) -> MetaOapg.properties.pclCivilStatTerminated: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCivilTransferee"]) -> MetaOapg.properties.pclCivilTransferee: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclCourtId"]) -> MetaOapg.properties.pclCourtId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclDateDischarged"]) -> MetaOapg.properties.pclDateDischarged: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclDateDismissed"]) -> MetaOapg.properties.pclDateDismissed: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclDateFiled"]) -> MetaOapg.properties.pclDateFiled: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclDateReopened"]) -> MetaOapg.properties.pclDateReopened: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclDateTermed"]) -> MetaOapg.properties.pclDateTermed: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclDisposition"]) -> MetaOapg.properties.pclDisposition: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclDispositionMethod"]) -> MetaOapg.properties.pclDispositionMethod: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclJointBankruptcyFlag"]) -> MetaOapg.properties.pclJointBankruptcyFlag: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclJointDischargedDate"]) -> MetaOapg.properties.pclJointDischargedDate: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclJointDismissedDate"]) -> MetaOapg.properties.pclJointDismissedDate: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclJointDispositionMethod"]) -> MetaOapg.properties.pclJointDispositionMethod: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclJpmlNumber"]) -> MetaOapg.properties.pclJpmlNumber: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclJurisdictionType"]) -> MetaOapg.properties.pclJurisdictionType: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlCourtId"]) -> MetaOapg.properties.pclMdlCourtId: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlDateOrdered"]) -> MetaOapg.properties.pclMdlDateOrdered: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlDateReceived"]) -> MetaOapg.properties.pclMdlDateReceived: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlExtension"]) -> MetaOapg.properties.pclMdlExtension: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlJudgeLastName"]) -> MetaOapg.properties.pclMdlJudgeLastName: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlLittype"]) -> MetaOapg.properties.pclMdlLittype: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlStatus"]) -> MetaOapg.properties.pclMdlStatus: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlTransferee"]) -> MetaOapg.properties.pclMdlTransferee: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclMdlTransfereeDistrict"]) -> MetaOapg.properties.pclMdlTransfereeDistrict: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pclNatureOfSuit"]) -> MetaOapg.properties.pclNatureOfSuit: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["object", "pclBankruptcyChapter", "pclCaseId", "pclCaseLink", "pclCaseNumber", "pclCaseNumberFull", "pclCaseOffice", "pclCaseTitle", "pclCaseType", "pclCaseYear", "pclCivilCtoNumber", "pclCivilDateDisposition", "pclCivilDateInitiated", "pclCivilDateTerminated", "pclCivilStatDisposition", "pclCivilStatInitiated", "pclCivilStatTerminated", "pclCivilTransferee", "pclCourtId", "pclDateDischarged", "pclDateDismissed", "pclDateFiled", "pclDateReopened", "pclDateTermed", "pclDisposition", "pclDispositionMethod", "pclJointBankruptcyFlag", "pclJointDischargedDate", "pclJointDismissedDate", "pclJointDispositionMethod", "pclJpmlNumber", "pclJurisdictionType", "pclMdlCourtId", "pclMdlDateOrdered", "pclMdlDateReceived", "pclMdlExtension", "pclMdlJudgeLastName", "pclMdlLittype", "pclMdlStatus", "pclMdlTransferee", "pclMdlTransfereeDistrict", "pclNatureOfSuit", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        pclDateReopened: typing.Union[MetaOapg.properties.pclDateReopened, None, str, ],
        pclJointDischargedDate: typing.Union[MetaOapg.properties.pclJointDischargedDate, None, str, ],
        pclCourtId: typing.Union[MetaOapg.properties.pclCourtId, None, str, ],
        pclCaseOffice: typing.Union[MetaOapg.properties.pclCaseOffice, None, str, ],
        pclCivilStatTerminated: typing.Union[MetaOapg.properties.pclCivilStatTerminated, None, str, ],
        pclDisposition: typing.Union[MetaOapg.properties.pclDisposition, None, str, ],
        pclNatureOfSuit: typing.Union[MetaOapg.properties.pclNatureOfSuit, None, str, ],
        pclCivilTransferee: typing.Union[MetaOapg.properties.pclCivilTransferee, None, str, ],
        pclCivilCtoNumber: typing.Union[MetaOapg.properties.pclCivilCtoNumber, None, str, ],
        pclCivilDateTerminated: typing.Union[MetaOapg.properties.pclCivilDateTerminated, None, str, ],
        pclCivilStatDisposition: typing.Union[MetaOapg.properties.pclCivilStatDisposition, None, str, ],
        pclMdlDateReceived: typing.Union[MetaOapg.properties.pclMdlDateReceived, None, str, ],
        pclJointBankruptcyFlag: typing.Union[MetaOapg.properties.pclJointBankruptcyFlag, None, str, ],
        pclCaseTitle: typing.Union[MetaOapg.properties.pclCaseTitle, None, str, ],
        pclDispositionMethod: typing.Union[MetaOapg.properties.pclDispositionMethod, None, str, ],
        pclJointDispositionMethod: typing.Union[MetaOapg.properties.pclJointDispositionMethod, None, str, ],
        pclJointDismissedDate: typing.Union[MetaOapg.properties.pclJointDismissedDate, None, str, ],
        pclDateFiled: typing.Union[MetaOapg.properties.pclDateFiled, None, str, ],
        pclCaseId: typing.Union[MetaOapg.properties.pclCaseId, decimal.Decimal, int, ],
        pclDateDismissed: typing.Union[MetaOapg.properties.pclDateDismissed, None, str, ],
        pclMdlTransferee: typing.Union[MetaOapg.properties.pclMdlTransferee, None, str, ],
        pclMdlLittype: typing.Union[MetaOapg.properties.pclMdlLittype, None, str, ],
        pclBankruptcyChapter: typing.Union[MetaOapg.properties.pclBankruptcyChapter, None, str, ],
        pclCaseLink: typing.Union[MetaOapg.properties.pclCaseLink, None, str, ],
        pclJpmlNumber: typing.Union[MetaOapg.properties.pclJpmlNumber, None, decimal.Decimal, int, ],
        pclMdlStatus: typing.Union[MetaOapg.properties.pclMdlStatus, None, str, ],
        pclCaseNumberFull: typing.Union[MetaOapg.properties.pclCaseNumberFull, None, str, ],
        pclMdlCourtId: typing.Union[MetaOapg.properties.pclMdlCourtId, None, str, ],
        pclMdlJudgeLastName: typing.Union[MetaOapg.properties.pclMdlJudgeLastName, None, str, ],
        pclCaseNumber: typing.Union[MetaOapg.properties.pclCaseNumber, decimal.Decimal, int, ],
        pclCaseType: typing.Union[MetaOapg.properties.pclCaseType, None, str, ],
        pclCivilStatInitiated: typing.Union[MetaOapg.properties.pclCivilStatInitiated, None, str, ],
        pclMdlDateOrdered: typing.Union[MetaOapg.properties.pclMdlDateOrdered, None, str, ],
        pclDateDischarged: typing.Union[MetaOapg.properties.pclDateDischarged, None, str, ],
        pclCaseYear: typing.Union[MetaOapg.properties.pclCaseYear, decimal.Decimal, int, ],
        pclCivilDateDisposition: typing.Union[MetaOapg.properties.pclCivilDateDisposition, None, str, ],
        pclJurisdictionType: typing.Union[MetaOapg.properties.pclJurisdictionType, str, ],
        pclMdlTransfereeDistrict: typing.Union[MetaOapg.properties.pclMdlTransfereeDistrict, None, str, ],
        pclCivilDateInitiated: typing.Union[MetaOapg.properties.pclCivilDateInitiated, None, str, ],
        pclDateTermed: typing.Union[MetaOapg.properties.pclDateTermed, None, str, ],
        pclMdlExtension: typing.Union[MetaOapg.properties.pclMdlExtension, None, str, ],
        object: typing.Union[MetaOapg.properties.object, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PACERCaseSearchContent':
        return super().__new__(
            cls,
            *args,
            pclDateReopened=pclDateReopened,
            pclJointDischargedDate=pclJointDischargedDate,
            pclCourtId=pclCourtId,
            pclCaseOffice=pclCaseOffice,
            pclCivilStatTerminated=pclCivilStatTerminated,
            pclDisposition=pclDisposition,
            pclNatureOfSuit=pclNatureOfSuit,
            pclCivilTransferee=pclCivilTransferee,
            pclCivilCtoNumber=pclCivilCtoNumber,
            pclCivilDateTerminated=pclCivilDateTerminated,
            pclCivilStatDisposition=pclCivilStatDisposition,
            pclMdlDateReceived=pclMdlDateReceived,
            pclJointBankruptcyFlag=pclJointBankruptcyFlag,
            pclCaseTitle=pclCaseTitle,
            pclDispositionMethod=pclDispositionMethod,
            pclJointDispositionMethod=pclJointDispositionMethod,
            pclJointDismissedDate=pclJointDismissedDate,
            pclDateFiled=pclDateFiled,
            pclCaseId=pclCaseId,
            pclDateDismissed=pclDateDismissed,
            pclMdlTransferee=pclMdlTransferee,
            pclMdlLittype=pclMdlLittype,
            pclBankruptcyChapter=pclBankruptcyChapter,
            pclCaseLink=pclCaseLink,
            pclJpmlNumber=pclJpmlNumber,
            pclMdlStatus=pclMdlStatus,
            pclCaseNumberFull=pclCaseNumberFull,
            pclMdlCourtId=pclMdlCourtId,
            pclMdlJudgeLastName=pclMdlJudgeLastName,
            pclCaseNumber=pclCaseNumber,
            pclCaseType=pclCaseType,
            pclCivilStatInitiated=pclCivilStatInitiated,
            pclMdlDateOrdered=pclMdlDateOrdered,
            pclDateDischarged=pclDateDischarged,
            pclCaseYear=pclCaseYear,
            pclCivilDateDisposition=pclCivilDateDisposition,
            pclJurisdictionType=pclJurisdictionType,
            pclMdlTransfereeDistrict=pclMdlTransfereeDistrict,
            pclCivilDateInitiated=pclCivilDateInitiated,
            pclDateTermed=pclDateTermed,
            pclMdlExtension=pclMdlExtension,
            object=object,
            _configuration=_configuration,
            **kwargs,
        )
